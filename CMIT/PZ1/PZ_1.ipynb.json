{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Практична робота №1\n",
    "## Елементи комбінаторики. Класичне визначення ймовірності\n",
    "### Застосування комбінаторики для розрахунку ймовірностей\n",
    "\n",
    "**Виконав:** Більда Павло  \n",
    "**Група:** КН-24-1  \n",
    "**Дата виконання:** 21.10.25"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Теоретичні відомості\n",
    "\n",
    "### Основні формули комбінаторики\n",
    "\n",
    "- **Перестановки:** $P_n = n! = 1 \\times 2 \\times 3 \\times ... \\times n$  \n",
    "  Кількість способів упорядкувати n різних елементів\n",
    "\n",
    "- **Розміщення:** $A_n^k = \\frac{n!}{(n-k)!} = n \\times (n-1) \\times ... \\times (n-k+1)$  \n",
    "  Кількість способів вибрати та впорядкувати k елементів з n\n",
    "\n",
    "- **Комбінації:** $C_n^k = \\frac{n!}{k!(n-k)!}$  \n",
    "  Кількість способів вибрати k елементів з n (порядок не має значення)\n",
    "\n",
    "- **Вибірка з поверненням:** $n^k$  \n",
    "  Кількість способів вибрати k елементів з n з можливістю повторень"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import math\n",
    "import numpy as np\n",
    "\n",
    "# Функції для комбінаторики\n",
    "def combinations(n, k):\n",
    "    \"\"\"Обчислення кількості комбінацій C(n,k)\"\"\"\n",
    "    return math.comb(n, k)\n",
    "\n",
    "def permutations(n, k=None):\n",
    "    \"\"\"Обчислення кількості перестановок P(n) або розміщень A(n,k)\"\"\"\n",
    "    if k is None:\n",
    "        return math.factorial(n)\n",
    "    else:\n",
    "        return math.factorial(n) // math.factorial(n - k)\n",
    "\n",
    "def arrangements(n, k):\n",
    "    \"\"\"Обчислення кількості розміщень A(n,k)\"\"\"\n",
    "    return permutations(n, k)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Завдання для самостійного розв'язання"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Задача 1\n",
    "\n",
    "Скільки словників потрібно видати, щоб можливо було безпосередньо виконати переклади з будь-якої з п'яти мов: російської, англійської, французької, німецької, італійської – на будь-яку з цих п'яти мов?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ЗАДАЧА 1\n",
      "Словники для перекладу між 5 мовами\n",
      "Кількість односпрямованих словників: A(5,2) = 20\n",
      "Кількість двосторонніх словників: C(5,2) = 10\n"
     ]
    }
   ],
   "source": [
    "print(\"ЗАДАЧА 1\")\n",
    "print(\"Словники для перекладу між 5 мовами\")\n",
    "\n",
    "# Кількість пар мов для перекладу\n",
    "languages = 5\n",
    "\n",
    "# Односпрямовані словники\n",
    "one_way_dicts = arrangements(5, 2)\n",
    "\n",
    "# Двосторонні словники\n",
    "two_way_dicts = combinations(5, 2)\n",
    "\n",
    "print(f\"Кількість односпрямованих словників: A(5,2) = {one_way_dicts}\")\n",
    "print(f\"Кількість двосторонніх словників: C(5,2) = {two_way_dicts}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Відповідь:** 20 словників (для односпрямованих перекладів) або 10 словників (для двосторонніх)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Задача 2\n",
    "\n",
    "Скількома способами на шаховій дошці можливо вказати:\n",
    "a) 2 клітинки?\n",
    "б) 2 клітинки одного кольору?\n",
    "в) 2 клітинки різного кольору?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "ЗАДАЧА 2\n",
      "Шахова дошка - вибір клітинок\n",
      "a) Будь-які 2 клітинки: C(64,2) = 2016\n",
      "б) 2 клітинки одного кольору: C(32,2) + C(32,2) = 992\n",
      "в) 2 клітинки різного кольору: 32 × 32 = 1024\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nЗАДАЧА 2\")\n",
    "print(\"Шахова дошка - вибір клітинок\")\n",
    "\n",
    "total_cells = 64\n",
    "white_cells = 32\n",
    "black_cells = 32\n",
    "\n",
    "# a) Будь-які 2 клітинки\n",
    "any_2_cells = combinations(64, 2)\n",
    "\n",
    "# б) 2 клітинки одного кольору\n",
    "same_color = combinations(32, 2) + combinations(32, 2)\n",
    "\n",
    "# в) 2 клітинки різного кольору\n",
    "different_color = white_cells * black_cells\n",
    "\n",
    "print(f\"a) Будь-які 2 клітинки: C(64,2) = {any_2_cells}\")\n",
    "print(f\"б) 2 клітинки одного кольору: C(32,2) + C(32,2) = {same_color}\")\n",
    "print(f\"в) 2 клітинки різного кольору: 32 × 32 = {different_color}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Відповідь:**  \n",
    "a) 2016 способів  \n",
    "б) 992 способи  \n",
    "в) 1024 способи"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Задача 3\n",
    "\n",
    "З цифр 1, 2, 3, 4, 5 складаються будь-які можливі числа, кожне з яких складається не більш ніж з 3 цифр. Скільки можливо скласти таких цифр, якщо:\n",
    "a) повторення цифр в числах не дозволяється;\n",
    "б) дозволяється повторення чисел?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "ЗАДАЧА 3\n",
      "Числа з цифр 1,2,3,4,5 (не більше 3 цифр)\n",
      "a) Без повторень цифр:\n",
      "   Однозначні: A(5,1) = 5\n",
      "   Двозначні: A(5,2) = 20\n",
      "   Тризначні: A(5,3) = 60\n",
      "   Загалом: 85\n",
      "\n",
      "б) З повторенням цифр:\n",
      "   Однозначні: 5 = 5\n",
      "   Двозначні: 5² = 25\n",
      "   Тризначні: 5³ = 125\n",
      "   Загалом: 155\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nЗАДАЧА 3\")\n",
    "print(\"Числа з цифр 1,2,3,4,5 (не більше 3 цифр)\")\n",
    "\n",
    "digits = 5\n",
    "\n",
    "# a) Без повторень\n",
    "one_digit_no_repeat = arrangements(5, 1)\n",
    "two_digit_no_repeat = arrangements(5, 2)\n",
    "three_digit_no_repeat = arrangements(5, 3)\n",
    "total_no_repeat = one_digit_no_repeat + two_digit_no_repeat + three_digit_no_repeat\n",
    "\n",
    "# б) З повторенням\n",
    "one_digit_with_repeat = 5\n",
    "two_digit_with_repeat = 5**2\n",
    "three_digit_with_repeat = 5**3\n",
    "total_with_repeat = one_digit_with_repeat + two_digit_with_repeat + three_digit_with_repeat\n",
    "\n",
    "print(\"a) Без повторень цифр:\")\n",
    "print(f\"   Однозначні: A(5,1) = {one_digit_no_repeat}\")\n",
    "print(f\"   Двозначні: A(5,2) = {two_digit_no_repeat}\")\n",
    "print(f\"   Тризначні: A(5,3) = {three_digit_no_repeat}\")\n",
    "print(f\"   Загалом: {total_no_repeat}\")\n",
    "\n",
    "print(\"\\nб) З повторенням цифр:\")\n",
    "print(f\"   Однозначні: 5 = {one_digit_with_repeat}\")\n",
    "print(f\"   Двозначні: 5² = {two_digit_with_repeat}\")\n",
    "print(f\"   Тризначні: 5³ = {three_digit_with_repeat}\")\n",
    "print(f\"   Загалом: {total_with_repeat}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Відповідь:**  \n",
    "a) 85 чисел  \n",
    "б) 155 чисел"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Задача 4\n",
    "\n",
    "В групі 9 людей. Скільки різних підгруп можливо створити за умови, що в підгрупі має бути не менше 2 людей?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "ЗАДАЧА 4\n",
      "Підгрупи з 9 людей (не менше 2 осіб)\n",
      "Загальна кількість підмножин: 2⁹ = 512\n",
      "Порожня підмножина: 1\n",
      "Підмножини з 1 людиною: C(9,1) = 9\n",
      "Підгрупи з ≥2 людей: 512 - 1 - 9 = 502\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nЗАДАЧА 4\")\n",
    "print(\"Підгрупи з 9 людей (не менше 2 осіб)\")\n",
    "\n",
    "people = 9\n",
    "total_subsets = 2**people\n",
    "empty_subset = 1\n",
    "single_person_subsets = combinations(9, 1)\n",
    "valid_subsets = total_subsets - empty_subset - single_person_subsets\n",
    "\n",
    "print(f\"Загальна кількість підмножин: 2⁹ = {total_subsets}\")\n",
    "print(f\"Порожня підмножина: 1\")\n",
    "print(f\"Підмножини з 1 людиною: C(9,1) = {single_person_subsets}\")\n",
    "print(f\"Підгрупи з ≥2 людей: {total_subsets} - 1 - {single_person_subsets} = {valid_subsets}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Відповідь:** 502 підгрупи"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Задача 5\n",
    "\n",
    "Скількома способами можливо розташувати на полиці 7 різних книг, якщо:\n",
    "a) 2 певні книги повинні стояти поряд;\n",
    "б) ці дві книги не повинні стояти поряд?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "ЗАДАЧА 5\n",
      "Розміщення 7 книг на полиці\n",
      "Загальна кількість перестановок: 7! = 5040\n",
      "\n",
      "a) 2 певні книги поряд:\n",
      "   Розміщення 6 об'єктів: 6! = 720\n",
      "   Перестановки двох книг: 2! = 2\n",
      "   Загалом: 720 × 2 = 1440\n",
      "\n",
      "б) 2 певні книги не поряд:\n",
      "   5040 - 1440 = 3600\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nЗАДАЧА 5\")\n",
    "print(\"Розміщення 7 книг на полиці\")\n",
    "\n",
    "total_books = 7\n",
    "total_arrangements = permutations(7)\n",
    "\n",
    "# a) 2 книги поряд\n",
    "objects_together = 6\n",
    "arrangements_together = permutations(6) * permutations(2)\n",
    "\n",
    "# б) 2 книги не поряд\n",
    "arrangements_apart = total_arrangements - arrangements_together\n",
    "\n",
    "print(f\"Загальна кількість перестановок: 7! = {total_arrangements}\")\n",
    "print(\"\\na) 2 певні книги поряд:\")\n",
    "print(f\"   Розміщення 6 об'єктів: 6! = {permutations(6)}\")\n",
    "print(f\"   Перестановки двох книг: 2! = {permutations(2)}\")\n",
    "print(f\"   Загалом: {permutations(6)} × {permutations(2)} = {arrangements_together}\")\n",
    "print(f\"\\nб) 2 певні книги не поряд:\")\n",
    "print(f\"   {total_arrangements} - {arrangements_together} = {arrangements_apart}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Відповідь:**  \n",
    "a) 1440 способів  \n",
    "б) 3600 способів"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Задача 6\n",
    "\n",
    "Групу з 20 студентів потрібно розділити на 3 бригади, за умови, що в першу бригаду повинні входити 3 людини, в другу - 5 і в третю - 12. Скількома способами це можливо виконати?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "ЗАДАЧА 6\n",
      "Розподіл 20 студентів на 3 бригади (3, 5, 12)\n",
      "Спосіб вибору 1-ї бригади (3 з 20): C(20,3) = 1140\n",
      "Спосіб вибору 2-ї бригади (5 з 17): C(17,5) = 6188\n",
      "Загальна кількість способів: 1140 × 6188 = 7,054,320\n"
     ]
    }
   ],
   "source": [
    "print(\"\\nЗАДАЧА 6\")\n",
    "print(\"Розподіл 20 студентів на 3 бригади (3, 5, 12)\")\n",
    "\n",
    "total_students = 20\n",
    "brigade1 = 3\n",
    "brigade2 = 5\n",
    "brigade3 = 12\n",
    "\n",
    "# Кількість способів\n",
    "ways_brigade1 = combinations(20, 3)\n",
    "ways_brigade2 = combinations(17, 5)\n",
    "total_ways = ways_brigade1 * ways_brigade2\n",
    "\n",
    "print(f\"Спосіб вибору 1-ї бригади (3 з 20): C(20,3) = {ways_brigade1}\")\n",
    "print(f\"Спосіб вибору 2-ї бригади (5 з 17): C(17,5) = {ways_brigade2}\")\n",
    "print(f\"Загальна кількість способів: {ways_brigade1} × {ways_brigade2} = {total_ways:,}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Відповідь:** 7,054,320 способів"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Контрольні питання"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. Що вивчає комбінаторика?\n",
    "\n",
    "Комбінаторика вивчає способи підрахунку кількості різних комбінацій, які можна утворити з елементів заданої множини, згідно з певними правилами. Вона включає вивчення перестановок, розміщень, комбінацій та інших комбінаторних конфігурацій."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Що таке класична урнова схема і яке значення вона має для комбінаторики?\n",
    "\n",
    "Класична урнова схема - це абстрактна модель, в якій розглядаються різні способи вибору кульок з урни. Вона має фундаментальне значення для комбінаторики, оскільки дозволяє формалізувати та класифікувати різні типи комбінаторних задач, таких як вибірка з поверненням чи без повернення, з урахуванням порядку чи без нього."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. Що таке перестановка і як знаходити їхню кількість для заданої множини елементів?\n",
    "\n",
    "Перестановка - це впорядкований розміщений набір елементів. Кількість перестановок n різних елементів обчислюється за формулою: Pₙ = n! = 1 × 2 × 3 × ... × n. Наприклад, для 3 елементів існує 3! = 6 перестановок."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 4. Яка кількість розміщень можлива для k елементів у множині з n елементів?\n",
    "\n",
    "Кількість розміщень (упорядкованих вибірок) k елементів з n елементів обчислюється за формулою: Aₙᵏ = n! / (n-k)! = n × (n-1) × ... × (n-k+1). Це кількість способів вибрати та впорядкувати k елементів з n доступних."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 5. Як визначити кількість способів вибору k елементів із множини, де порядок не має значення?\n",
    "\n",
    "Кількість способів вибору k елементів з n елементів без урахування порядку (комбінації) обчислюється за формулою: Cₙᵏ = n! / (k! × (n-k)!). Ця формула використовується, коли важливий лише склад вибірки, а не порядок елементів у ній."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Висновок\n",
    "\n",
    "У ході виконання практичної роботи №1 було розглянуто основні поняття комбінаторики та застосовано їх для розв'язання практичних задач. Було опрацьовано формули для обчислення кількості розміщень, комбінацій та перестановок, а також їх застосування в різних комбінаторних схемах. Отримані навички є важливими для подальшого вивчення теорії ймовірностей та її застосування в інформаційних технологіях. Комбінаторні методи є фундаментом для розрахунку ймовірностей у дискретних моделях, що особливо важливо в комп'ютерних науках та інформаційних технологіях."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==================================================\n",
      "ПЕРЕВІРКА РЕЗУЛЬТАТІВ\n",
      "==================================================\n",
      "Задача 1 (односпрямовані): 20\n",
      "Задача 1 (двосторонні): 10\n",
      "Задача 2a: 2,016\n",
      "Задача 2b: 992\n",
      "Задача 2c: 1,024\n",
      "Задача 3a: 85\n",
      "Задача 3b: 155\n",
      "Задача 4: 502\n",
      "Задача 5a: 1,440\n",
      "Задача 5b: 3,600\n",
      "Задача 6: 7,054,320\n"
     ]
    }
   ],
   "source": [
    "# Додаткова перевірка результатів\n",
    "print(\"=\" * 50)\n",
    "print(\"ПЕРЕВІРКА РЕЗУЛЬТАТІВ\")\n",
    "print(\"=\" * 50)\n",
    "\n",
    "results = {\n",
    "    \"Задача 1 (односпрямовані)\": arrangements(5, 2),\n",
    "    \"Задача 1 (двосторонні)\": combinations(5, 2),\n",
    "    \"Задача 2a\": combinations(64, 2),\n",
    "    \"Задача 2b\": combinations(32, 2) + combinations(32, 2),\n",
    "    \"Задача 2c\": 32 * 32,\n",
    "    \"Задача 3a\": arrangements(5, 1) + arrangements(5, 2) + arrangements(5, 3),\n",
    "    \"Задача 3b\": 5 + 5**2 + 5**3,\n",
    "    \"Задача 4\": 2**9 - 1 - combinations(9, 1),\n",
    "    \"Задача 5a\": permutations(6) * permutations(2),\n",
    "    \"Задача 5b\": permutations(7) - (permutations(6) * permutations(2)),\n",
    "    \"Задача 6\": combinations(20, 3) * combinations(17, 5)\n",
    "}\n",
    "\n",
    "for task, result in results.items():\n",
    "    print(f\"{task}: {result:,}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}